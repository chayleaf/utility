#!/usr/bin/python3
from datetime import datetime
from osu import *
import json, os, sys, argparse, shutil

parser = argparse.ArgumentParser(description='Backup osu! collections')

parser.add_argument('--osubase', '-b', help='osu! directory')
parser.add_argument('--path', '-p', help='The file used for storing the collections.db backup', nargs='?', default='')
parser.add_argument('--force', '-f', help='Force restore backup', action='store_true')

if len(sys.argv) == 1:
	try:
		with open('data/secret.json') as f:
			d = json.loads(f.read())
			osuBase = d['osubase']
			cBak = d['collectionsBackup']
			force = False
	except:
		parser.print_help()
		sys.exit(0)
else:
	args = parser.parseArgs()
	osuBase = args.osubase
	cBak = args.path
	force = args.force

try:
	dbBak = CollectionDb(cBak)
except:
	shutil.copy2(os.path.join(osuBase, 'collection.db'), cBak)
	print('Done!')
	sys.exit(0)

db = CollectionDb(os.path.join(osuBase, 'collection.db'))

collStatusByName = {}

def isAutoGeneratedColl(coll):
	n = coll.name.split()
	if len(n) == 2 and n[0].isupper() and n[1].endswith('%') and len(n[1][:-1].split('-')) == 2 and [a.isnumeric() for a in n[1][:-1].split('-')]:
		return True
	return False

for coll in db.collections:
	if isAutoGeneratedColl(coll):
		continue
	collStatusByName[coll.name] = [len(coll), False]

cntDec = 0
cntInc = 0

for coll in dbBak.collections:
	if isAutoGeneratedColl(coll):
		continue
	if not coll.name in collStatusByName.keys():
		collStatusByName[coll.name] = (0, False)
	collStatusByName[coll.name][1] = True
	old = collStatusByName[coll.name][0]
	new = len(coll)
	if new < old:
		cntDec += 1
	elif new > old:
		cntInc += 1

cntTot = len([None for a in collStatusByName.values() if a[1]])
perDec = cntDec / cntTot
perInc = cntInc / cntTot

doRest = force

if not force:
	if perDec > 10:
		if perInc > 5:
			yn = input(f'{cntDec} ({perDec}%) collections decreased in size, but {cntInc} ({perInc}%) collections increased in size. Restore backup? (y/n): ')
		else:
			yn = input(f'{cntDec} ({perDec}%) collections decreased in size. Restore backup? (y/n): ')
		doRest = yn.lower().startswith('y')

if doRest: #restore
	shutil.copy2(cBak, os.path.join(osuBase, 'collection.db'))

shutil.copy2(os.path.join(osuBase, 'collection.db'), cBak)
print('Done!')